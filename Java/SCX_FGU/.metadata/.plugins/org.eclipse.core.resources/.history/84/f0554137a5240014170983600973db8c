package scx.fgu.level;

import scx.fgu.graphics.Screen;
import scx.fgu.level.tile.Tile;

public class Level {
	
	protected Tile[] tiles;
	protected int width, height;
	protected int[] tilesInt;
	
	public Level(int width, int height) {
		this.width = width;
		this.height = height;
		tilesInt = new int[width * height];
		generateLevel();
	}
	
	public Level(String path) {
		loadLevel(path);
		generateLevel();
	}
	
	protected void generateLevel() {
	}
	
	protected void loadLevel(String path) {
	}
	
	public void update() {
	}
	
	private void time() {
	}
	
	public void render(int xScroll, int yScroll, Screen screen) {
		screen.setOffset(xScroll, yScroll);
		int xUpperLeft = xScroll >> 4;
		int yUpperLeft = yScroll >> 4;
		int xLowerRight = (xScroll + screen.width + 16) >> 4;
		int yLowerRight = (yScroll + screen.height + 16) >> 4;
		
		for (int y = yUpperLeft; y < yLowerRight; y += 1) {
			for (int x = xUpperLeft; x < xLowerRight; x += 1) {
				//getTile(x, y).render(x, y, screen);
				if (x+y*32 < 0 || x+y*32 >= (32*32)) {
					Tile.nill.render(x, y, screen);
					continue;
				}
				tiles[x+y*16].render(x, y, screen);
			}
		}
	}
	
	public Tile getTile(int x, int y) {
		if (x < 0 || x >= width || y < 0 || y >= height) return Tile.nill;
		if (tilesInt[x + y * width] == 0) return Tile.grass;
		if (tilesInt[x + y * width] == 1) return Tile.flower;
		if (tilesInt[x + y * width] == 2) return Tile.rock;
		
		return Tile.nill;
	}

}
